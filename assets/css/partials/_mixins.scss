/* mixins */
@mixin border-radius($val) {
  border-radius: $val !important;
  -webkit-border-radius: $val !important;
  -moz-border-radius: $val !important;
  -ms-border-radius: $val !important;
  -o-border-radius: $val !important;
}

@mixin transition($args...) {
  -webkit-transition: $args !important;
  -moz-transition: $args !important;
  -ms-transition: $args !important;
  -o-transition: $args !important;
  transition: $args !important;
}

/* Mixins */
@mixin MQ($canvas) {
  @media (max-width: $canvas) {
    @content;
  }
}

@mixin transform($args...) {
  -webkit-transform: $args;
  -moz-transform: $args;
  -ms-transform: $args;
  -o-transform: $args;
  transform: $args;
}

@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin shape($size, $radius: 0) {
  width: $size;
  height: $size;

  @if $radius != 0 {
    @include border-radius($radius);
    // border-radius: $radius;
  }
}

@mixin text-shorten {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

  // Output standard non-prefixed declaration
  #{$property}: $value;
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: "";

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
